<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zeei.das.dss.dao.StorageDao">

	<insert id="insertData" statementType="STATEMENT" >
		insert into ${tableName}
		(
		  `POINTCODE`,
		  `POLLUTECODE`,
		  `DATATIME`,
		  `DATAVALUE`,
		  `MAXVALUE`,
		  `MINVALUE`,
		  `AUDITVALUE`,
		  `UPDATETIME`,
		  `DATAFLAG`,
		  `DATASTATUS`,
		  `ISVALIDED`
		)
		values
		(
		 ${vo.pointCode}, 
		 '${vo.polluteCode}',
		 '${vo.dataTime}',
		 <choose><when test="vo.dataValue!=null">${vo.dataValue},</when><otherwise>null,</otherwise></choose>
         <choose><when test="vo.maxValue!=null">${vo.maxValue},</when><otherwise>null,</otherwise></choose>
         <choose><when test="vo.minValue!=null">${vo.minValue},</when><otherwise>null,</otherwise></choose>
         <choose><when test="vo.auditValue!=null">${vo.auditValue},</when><otherwise>null,</otherwise></choose>            
		 '${vo.updateTime}',
		 '${vo.dataFlag}',
		 '${vo.dataStatus}',
		 ${vo.isValided}
		)
		ON DUPLICATE KEY UPDATE
		DATAVALUE=VALUES(DATAVALUE),
        `MAXVALUE`=VALUES(`MAXVALUE`),
        `MINVALUE`=VALUES(`MINVALUE`),
        AUDITVALUE=VALUES(AUDITVALUE),
        UPDATETIME=VALUES(UPDATETIME),
        DATAFLAG=VALUES(DATAFLAG),
        DATASTATUS=VALUES(DATASTATUS),
        ISVALIDED=VALUES(ISVALIDED)
	</insert>


	<insert id="insertDataBatch" statementType="STATEMENT">
		insert into ${tableName}
		(
		  `POINTCODE`,
		  `POLLUTECODE`,
		  `DATATIME`,
		  `DATAVALUE`,
		  `MAXVALUE`,
		  `MINVALUE`,
		  `AUDITVALUE`,
		  `UPDATETIME`,
		  `DATAFLAG`,
		  `DATASTATUS`,
		  `ISVALIDED`
		) values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(
			 ${item.pointCode}, 
			 '${item.polluteCode}',
			 '${item.dataTime}',
			 <choose><when test="item.dataValue!=null">${item.dataValue},</when><otherwise>null,</otherwise></choose>
	         <choose><when test="item.maxValue!=null">${item.maxValue},</when><otherwise>null,</otherwise></choose>
	         <choose><when test="item.minValue!=null">${item.minValue},</when><otherwise>null,</otherwise></choose>
	         <choose><when test="item.auditValue!=null">${item.auditValue},</when><otherwise>null,</otherwise></choose>    
			 '${item.updateTime}',
			 '${item.dataFlag}',
			 '${item.dataStatus}',
			 ${item.isValided}
			 )
		</foreach>
		ON DUPLICATE KEY UPDATE
		DATAVALUE=VALUES(DATAVALUE),
        `MAXVALUE`=VALUES(`MAXVALUE`),
        `MINVALUE`=VALUES(`MINVALUE`),
        AUDITVALUE=VALUES(AUDITVALUE),
        UPDATETIME=VALUES(UPDATETIME),
        DATAFLAG=VALUES(DATAFLAG),
        DATASTATUS=VALUES(DATASTATUS),
        ISVALIDED=VALUES(ISVALIDED)
	</insert>
	
	
	<insert id="insertYMDataByBatch" statementType="STATEMENT">
			insert into ${tableName} 
			(POINTCODE,
			  POLLUTECODE,
			  MONITORTYPE,
			  DATATIME,
			  UPDATETIME,
			  `MAXVALUE`,
			  `MINVALUE`,
			  `AVGVALUE`,
			  DATAFLAG
			  )	values
			<foreach collection="list" item="item" index="index" separator=",">
            ( ${item.pointCode},
			  '${item.polluteCode}',
			  '${item.dataType}',
			  '${item.dataTime}',
			  '${item.updateTime}',
			  <choose><when test="item.dataValue!=null">${item.dataValue},</when><otherwise>null,</otherwise></choose>
	          <choose><when test="item.maxValue!=null">${item.maxValue},</when><otherwise>null,</otherwise></choose>
	          <choose><when test="item.minValue!=null">${item.minValue},</when><otherwise>null,</otherwise></choose>   
			  '${item.dataFlag}')
		  	 </foreach>
		ON DUPLICATE KEY UPDATE
		AVGVALUE=VALUES(AVGVALUE),
        `MAXVALUE`=VALUES(`MAXVALUE`),
        `MINVALUE`=VALUES(`MINVALUE`),
        UPDATETIME=VALUES(UPDATETIME),
        DATAFLAG=VALUES(DATAFLAG)
	</insert>
	
	<insert id="insertYMData" statementType="STATEMENT">
			insert into ${tableName} 
			(POINTCODE,
			  POLLUTECODE,
			  MONITORTYPE,
			  DATATIME,
			  UPDATETIME,
			  `MAXVALUE`,
			  `MINVALUE`,
			  `AVGVALUE`,
			  DATAFLAG
			  )	values
            ( ${vo.pointCode},
			  '${vo.polluteCode}',
			  '${vo.dataType}',
			  '${vo.dataTime}',
			  '${vo.updateTime}',
			  <choose><when test="vo.dataValue!=null">${vo.dataValue},</when><otherwise>null,</otherwise></choose>
	          <choose><when test="vo.maxValue!=null">${vo.maxValue},</when><otherwise>null,</otherwise></choose>
	          <choose><when test="vo.minValue!=null">${vo.minValue},</when><otherwise>null,</otherwise></choose>  
			  '${vo.dataFlag}')
		on duplicate key update
		AVGVALUE=VALUES(AVGVALUE),
        `MAXVALUE`=VALUES(`MAXVALUE`),
        `MINVALUE`=VALUES(`MINVALUE`),
        UPDATETIME=VALUES(UPDATETIME),
        DATAFLAG=VALUES(DATAFLAG)
	</insert>
	
	<insert id="insertAuditDataBatch" statementType="STATEMENT">
		insert into ${tableName}
		(
		  `POINTCODE`,
		  `POLLUTECODE`,
		  `DATATIME`,
		  `AUDITVALUE`,
		  `UPDATETIME`,
		   DATASTATUS,
		  `ISVALIDED`,
		   `dataFlag`
		) values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(
			 ${item.pointCode}, 
			 '${item.polluteCode}',
			 '${item.dataTime}',			
			 <choose><when test="item.auditValue!=null">${item.auditValue},</when><otherwise>null,</otherwise></choose>
			 '${item.updateTime}',
			 '${item.dataStatus}',
			 ${item.isValided},
			 '${item.dataFlag}'
			 )
		</foreach>
		on duplicate key update
		AUDITVALUE=VALUES(AUDITVALUE),
        UPDATETIME=VALUES(UPDATETIME),
        ISVALIDED=VALUES(ISVALIDED),
        dataFlag=VALUES(dataFlag),
        dataStatus=VALUES(dataStatus)
	</insert>
	
		
	<update id="reviewData" statementType="STATEMENT">
		UPDATE ${tableName}
			SET DATASTATUS=2
		WHERE POINTCODE=${pointCode}
			<if test="beginTime!=null and beginTime!=''">
				AND DATATIME &gt;='${beginTime}'
			</if>
			AND DATATIME &lt; '${endTime}'
			AND	DATASTATUS=1
	</update>
	
	<update id="auditData" statementType="STATEMENT">
		UPDATE ${tableName}
			SET DATASTATUS=1
		WHERE POINTCODE=${pointCode}
			<if test="beginTime!=null and beginTime!=''">
				AND DATATIME &gt;= '${beginTime}'
			</if>
			AND DATATIME &lt; '${endTime}'
			AND	(DATASTATUS=0 OR DATASTATUS is null)
			AND POLLUTECODE in (SELECT POLLUTECODE FROM T_DIC_STDPOLLCODE WHERE ISAUDIT=1)
	</update>
	
</mapper>
